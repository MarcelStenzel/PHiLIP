{'adc[0].error_code': {'access': 1,
                       'array_size': '',
                       'bit_offset': '',
                       'bits': '',
                       'default': '',
                       'description': '',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'adc[0].error_code',
                       'offset': 393,
                       'total_size': '',
                       'type': 'uint16_t',
                       'type_size': 2},
 'adc[0].mode': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': '',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'adc[0].mode',
                 'offset': 392,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'adc[0].res': {'access': 0,
                'array_size': 8,
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Reserved bytes',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'adc[0].res',
                'offset': 400,
                'total_size': 8,
                'type': 'uint8_t',
                'type_size': 1},
 'adc[0].sample_rate': {'access': 1,
                        'array_size': '',
                        'bit_offset': '',
                        'bits': '',
                        'default': '',
                        'description': '',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'adc[0].sample_rate',
                        'offset': 395,
                        'total_size': '',
                        'type': 'uint8_t',
                        'type_size': 1},
 'adc[0].value': {'access': 1,
                  'array_size': '',
                  'bit_offset': '',
                  'bits': '',
                  'default': '',
                  'description': '',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'adc[0].value',
                  'offset': 396,
                  'total_size': '',
                  'type': 'uint32_t',
                  'type_size': 4},
 'adc[1].error_code': {'access': 1,
                       'array_size': '',
                       'bit_offset': '',
                       'bits': '',
                       'default': '',
                       'description': '',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'adc[1].error_code',
                       'offset': 409,
                       'total_size': '',
                       'type': 'uint16_t',
                       'type_size': 2},
 'adc[1].mode': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': '',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'adc[1].mode',
                 'offset': 408,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'adc[1].res': {'access': 0,
                'array_size': 8,
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Reserved bytes',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'adc[1].res',
                'offset': 416,
                'total_size': 8,
                'type': 'uint8_t',
                'type_size': 1},
 'adc[1].sample_rate': {'access': 1,
                        'array_size': '',
                        'bit_offset': '',
                        'bits': '',
                        'default': '',
                        'description': '',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'adc[1].sample_rate',
                        'offset': 411,
                        'total_size': '',
                        'type': 'uint8_t',
                        'type_size': 1},
 'adc[1].value': {'access': 1,
                  'array_size': '',
                  'bit_offset': '',
                  'bits': '',
                  'default': '',
                  'description': '',
                  'flag': '',
                  'invalid': '',
                  'max': '',
                  'min': '',
                  'name': 'adc[1].value',
                  'offset': 412,
                  'total_size': '',
                  'type': 'uint32_t',
                  'type_size': 4},
 'i2c.clk_stretch_delay': {'access': 1,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'Delay in us for clock stretch',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.clk_stretch_delay',
                           'offset': 322,
                           'total_size': '',
                           'type': 'uint16_t',
                           'type_size': 2},
 'i2c.f_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for full frame',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.f_ticks',
                 'offset': 342,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'i2c.mode': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Specific modes for I2C',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'i2c.mode',
              'offset': 320,
              'total_size': '',
              'type': 'i2c_mode_t',
              'type_size': 1},
 'i2c.mode.addr_10_bit': {'access': 1,
                          'array_size': '',
                          'bit_offset': 0,
                          'bits': 1,
                          'default': '',
                          'description': '10 bit address enable',
                          'flag': '',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'i2c.mode.addr_10_bit',
                          'offset': 320,
                          'total_size': '',
                          'type': '',
                          'type_size': 1},
 'i2c.mode.general_call': {'access': 1,
                           'array_size': '',
                           'bit_offset': 1,
                           'bits': 1,
                           'default': '',
                           'description': 'General call enable',
                           'flag': '',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'i2c.mode.general_call',
                           'offset': 320,
                           'total_size': '',
                           'type': '',
                           'type_size': 1},
 'i2c.mode.nack_data': {'access': 1,
                        'array_size': '',
                        'bit_offset': 4,
                        'bits': 1,
                        'default': '',
                        'description': 'Forces a data nack',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'i2c.mode.nack_data',
                        'offset': 320,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'i2c.mode.no_clk_stretch': {'access': 1,
                             'array_size': '',
                             'bit_offset': 2,
                             'bits': 1,
                             'default': '',
                             'description': 'Disable for clk stretch',
                             'flag': '',
                             'invalid': '',
                             'max': '',
                             'min': '',
                             'name': 'i2c.mode.no_clk_stretch',
                             'offset': 320,
                             'total_size': '',
                             'type': '',
                             'type_size': 1},
 'i2c.mode.reg_16_bit': {'access': 1,
                         'array_size': '',
                         'bit_offset': 3,
                         'bits': 1,
                         'default': '',
                         'description': '16 bit register access mode',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'i2c.mode.reg_16_bit',
                         'offset': 320,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'i2c.r_count': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last read frame byte count',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.r_count',
                 'offset': 328,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'i2c.r_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for read byte',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.r_ticks',
                 'offset': 330,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'i2c.res': {'access': 0,
             'array_size': 6,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'i2c.res',
             'offset': 346,
             'total_size': 6,
             'type': 'uint8_t',
             'type_size': 1},
 'i2c.s_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for start and address',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.s_ticks',
                 'offset': 338,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'i2c.slave_addr_1': {'access': 1,
                      'array_size': '',
                      'bit_offset': '',
                      'bits': '',
                      'default': 85,
                      'description': 'Primary slave address',
                      'flag': '',
                      'invalid': 125,
                      'max': 124,
                      'min': 8,
                      'name': 'i2c.slave_addr_1',
                      'offset': 324,
                      'total_size': '',
                      'type': 'uint16_t',
                      'type_size': 2},
 'i2c.slave_addr_2': {'access': 1,
                      'array_size': '',
                      'bit_offset': '',
                      'bits': '',
                      'default': 66,
                      'description': 'Secondary slave address',
                      'flag': '',
                      'invalid': 126,
                      'max': 124,
                      'min': 8,
                      'name': 'i2c.slave_addr_2',
                      'offset': 326,
                      'total_size': '',
                      'type': 'uint16_t',
                      'type_size': 2},
 'i2c.status': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Specific modes for I2C',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'i2c.status',
                'offset': 321,
                'total_size': '',
                'type': 'i2c_status_t',
                'type_size': 1},
 'i2c.status.AF': {'access': 0,
                   'array_size': '',
                   'bit_offset': 1,
                   'bits': 1,
                   'default': '',
                   'description': 'Acknowledge failure',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'i2c.status.AF',
                   'offset': 321,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'i2c.status.BERR': {'access': 0,
                     'array_size': '',
                     'bit_offset': 2,
                     'bits': 1,
                     'default': '',
                     'description': 'Bus error:  Non-valid position during a '
                                    'byte transfer',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.status.BERR',
                     'offset': 321,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.status.BUSY': {'access': 0,
                     'array_size': '',
                     'bit_offset': 4,
                     'bits': 1,
                     'default': '',
                     'description': 'i2c bus is BUSY',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'i2c.status.BUSY',
                     'offset': 321,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'i2c.status.GENCALL': {'access': 0,
                        'array_size': '',
                        'bit_offset': 3,
                        'bits': 1,
                        'default': '',
                        'description': 'General call address received',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'i2c.status.GENCALL',
                        'offset': 321,
                        'total_size': '',
                        'type': '',
                        'type_size': 1},
 'i2c.status.OVR': {'access': 0,
                    'array_size': '',
                    'bit_offset': 0,
                    'bits': 1,
                    'default': '',
                    'description': 'Overrun/Underrun: Request for new byte '
                                   'when not ready',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'i2c.status.OVR',
                    'offset': 321,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'i2c.status.RSR': {'access': 0,
                    'array_size': '',
                    'bit_offset': 5,
                    'bits': 1,
                    'default': '',
                    'description': 'Repeated start detected',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'i2c.status.RSR',
                    'offset': 321,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'i2c.w_count': {'access': 1,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Last write frame byte count',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.w_count',
                 'offset': 329,
                 'total_size': '',
                 'type': 'uint8_t',
                 'type_size': 1},
 'i2c.w_ticks': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'Ticks for write byte',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'i2c.w_ticks',
                 'offset': 334,
                 'total_size': '',
                 'type': 'uint32_t',
                 'type_size': 4},
 'pwm.duty': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'pwm.duty',
              'offset': 427,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'pwm.error_code': {'access': 1,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': '',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'pwm.error_code',
                    'offset': 425,
                    'total_size': '',
                    'type': 'uint16_t',
                    'type_size': 2},
 'pwm.freq': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'pwm.freq',
              'offset': 428,
              'total_size': '',
              'type': 'uint32_t',
              'type_size': 4},
 'pwm.mode': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'pwm.mode',
              'offset': 424,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'pwm.res': {'access': 0,
             'array_size': 8,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'pwm.res',
             'offset': 432,
             'total_size': 8,
             'type': 'uint8_t',
             'type_size': 1},
 'res': {'access': 0,
         'array_size': 568,
         'bit_offset': '',
         'bits': '',
         'default': '',
         'description': 'Reserved bytes',
         'flag': '',
         'invalid': '',
         'max': '',
         'min': '',
         'name': 'res',
         'offset': 456,
         'total_size': 568,
         'type': 'uint8_t',
         'type_size': 1},
 'rtc.day_of_month': {'access': 1,
                      'array_size': '',
                      'bit_offset': '',
                      'bits': '',
                      'default': '',
                      'description': 'The months in decimal',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'rtc.day_of_month',
                      'offset': 387,
                      'total_size': '',
                      'type': 'uint8_t',
                      'type_size': 1},
 'rtc.day_of_week': {'access': 1,
                     'array_size': '',
                     'bit_offset': '',
                     'bits': '',
                     'default': '',
                     'description': 'The week in decimal',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'rtc.day_of_week',
                     'offset': 388,
                     'total_size': '',
                     'type': 'uint8_t',
                     'type_size': 1},
 'rtc.hour': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'The hours in decimal',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'rtc.hour',
              'offset': 386,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'rtc.minute': {'access': 1,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'The minutes in decimal',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'rtc.minute',
                'offset': 385,
                'total_size': '',
                'type': 'uint8_t',
                'type_size': 1},
 'rtc.month': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'The month in decimal',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'rtc.month',
               'offset': 389,
               'total_size': '',
               'type': 'uint8_t',
               'type_size': 1},
 'rtc.res': {'access': 0,
             'array_size': 1,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'rtc.res',
             'offset': 391,
             'total_size': 1,
             'type': 'uint8_t',
             'type_size': 1},
 'rtc.second': {'access': 1,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'The seconds in decimal',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'rtc.second',
                'offset': 384,
                'total_size': '',
                'type': 'uint8_t',
                'type_size': 1},
 'rtc.year': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'The last two digits of the year in decimal '
                             '(20xx)',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'rtc.year',
              'offset': 390,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'spi.error_code': {'access': 1,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': '',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'spi.error_code',
                    'offset': 353,
                    'total_size': '',
                    'type': 'uint32_t',
                    'type_size': 4},
 'spi.mode': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'spi.mode',
              'offset': 352,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'spi.res': {'access': 0,
             'array_size': 11,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'spi.res',
             'offset': 357,
             'total_size': 11,
             'type': 'uint8_t',
             'type_size': 1},
 'sys.build_time.day_of_month': {'access': 0,
                                 'array_size': '',
                                 'bit_offset': '',
                                 'bits': '',
                                 'default': '',
                                 'description': 'The months in decimal',
                                 'flag': 'DEVICE_SPECIFIC',
                                 'invalid': '',
                                 'max': '',
                                 'min': '',
                                 'name': 'sys.build_time.day_of_month',
                                 'offset': 287,
                                 'total_size': '',
                                 'type': 'uint8_t',
                                 'type_size': 1},
 'sys.build_time.day_of_week': {'access': 0,
                                'array_size': '',
                                'bit_offset': '',
                                'bits': '',
                                'default': '',
                                'description': 'The week in decimal',
                                'flag': 'DEVICE_SPECIFIC',
                                'invalid': '',
                                'max': '',
                                'min': '',
                                'name': 'sys.build_time.day_of_week',
                                'offset': 288,
                                'total_size': '',
                                'type': 'uint8_t',
                                'type_size': 1},
 'sys.build_time.hour': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'The hours in decimal',
                         'flag': 'DEVICE_SPECIFIC',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'sys.build_time.hour',
                         'offset': 286,
                         'total_size': '',
                         'type': 'uint8_t',
                         'type_size': 1},
 'sys.build_time.minute': {'access': 0,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'The minutes in decimal',
                           'flag': 'DEVICE_SPECIFIC',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'sys.build_time.minute',
                           'offset': 285,
                           'total_size': '',
                           'type': 'uint8_t',
                           'type_size': 1},
 'sys.build_time.month': {'access': 0,
                          'array_size': '',
                          'bit_offset': '',
                          'bits': '',
                          'default': '',
                          'description': 'The month in decimal',
                          'flag': 'DEVICE_SPECIFIC',
                          'invalid': '',
                          'max': '',
                          'min': '',
                          'name': 'sys.build_time.month',
                          'offset': 289,
                          'total_size': '',
                          'type': 'uint8_t',
                          'type_size': 1},
 'sys.build_time.res': {'access': 0,
                        'array_size': 1,
                        'bit_offset': '',
                        'bits': '',
                        'default': '',
                        'description': 'Reserved bytes',
                        'flag': '',
                        'invalid': '',
                        'max': '',
                        'min': '',
                        'name': 'sys.build_time.res',
                        'offset': 291,
                        'total_size': 1,
                        'type': 'uint8_t',
                        'type_size': 1},
 'sys.build_time.second': {'access': 0,
                           'array_size': '',
                           'bit_offset': '',
                           'bits': '',
                           'default': '',
                           'description': 'The seconds in decimal',
                           'flag': 'DEVICE_SPECIFIC',
                           'invalid': '',
                           'max': '',
                           'min': '',
                           'name': 'sys.build_time.second',
                           'offset': 284,
                           'total_size': '',
                           'type': 'uint8_t',
                           'type_size': 1},
 'sys.build_time.year': {'access': 0,
                         'array_size': '',
                         'bit_offset': '',
                         'bits': '',
                         'default': '',
                         'description': 'The last two digits of the year in '
                                        'decimal (20xx)',
                         'flag': 'DEVICE_SPECIFIC',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'sys.build_time.year',
                         'offset': 290,
                         'total_size': '',
                         'type': 'uint8_t',
                         'type_size': 1},
 'sys.cr': {'access': 1,
            'array_size': '',
            'bit_offset': '',
            'bits': '',
            'default': '',
            'description': 'Control register for device',
            'flag': '',
            'invalid': '',
            'max': '',
            'min': '',
            'name': 'sys.cr',
            'offset': 297,
            'total_size': '',
            'type': 'sys_cr_t',
            'type_size': 1},
 'sys.cr.dut_rst': {'access': 1,
                    'array_size': '',
                    'bit_offset': 0,
                    'bits': 1,
                    'default': '',
                    'description': 'resets the DUT',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'sys.cr.dut_rst',
                    'offset': 297,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'sys.device_num': {'access': 0,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': 17061,
                    'description': 'A constant number that should always be '
                                   'the same',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'sys.device_num',
                    'offset': 292,
                    'total_size': '',
                    'type': 'uint32_t',
                    'type_size': 4},
 'sys.fw_rev': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Firmware revision',
                'flag': '',
                'invalid': 0,
                'max': '',
                'min': '',
                'name': 'sys.fw_rev',
                'offset': 268,
                'total_size': '',
                'type': 'uint32_t',
                'type_size': 4},
 'sys.if_rev': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Interface revision',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'sys.if_rev',
                'offset': 272,
                'total_size': '',
                'type': 'uint32_t',
                'type_size': 4},
 'sys.res': {'access': 0,
             'array_size': 22,
             'bit_offset': '',
             'bits': '',
             'default': '',
             'description': 'Reserved bytes',
             'flag': '',
             'invalid': '',
             'max': '',
             'min': '',
             'name': 'sys.res',
             'offset': 298,
             'total_size': 22,
             'type': 'uint8_t',
             'type_size': 1},
 'sys.sn': {'access': 0,
            'array_size': 12,
            'bit_offset': '',
            'bits': '',
            'default': '',
            'description': 'Unique ID of the device',
            'flag': 'DEVICE_SPECIFIC',
            'invalid': '',
            'max': '',
            'min': '',
            'name': 'sys.sn',
            'offset': 256,
            'total_size': 12,
            'type': 'uint8_t',
            'type_size': 1},
 'sys.status': {'access': 0,
                'array_size': '',
                'bit_offset': '',
                'bits': '',
                'default': '',
                'description': 'Status of system',
                'flag': '',
                'invalid': '',
                'max': '',
                'min': '',
                'name': 'sys.status',
                'offset': 296,
                'total_size': '',
                'type': 'sys_sr_t',
                'type_size': 1},
 'sys.status.update': {'access': 0,
                       'array_size': '',
                       'bit_offset': 0,
                       'bits': 1,
                       'default': '',
                       'description': 'Update available execute needed',
                       'flag': '',
                       'invalid': '',
                       'max': '',
                       'min': '',
                       'name': 'sys.status.update',
                       'offset': 296,
                       'total_size': '',
                       'type': '',
                       'type_size': 1},
 'sys.tick': {'access': 0,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Tick in ms',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'sys.tick',
              'offset': 276,
              'total_size': '',
              'type': 'uint64_t',
              'type_size': 8},
 'tmr.duty': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'tmr.duty',
              'offset': 443,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'tmr.error_code': {'access': 1,
                    'array_size': '',
                    'bit_offset': '',
                    'bits': '',
                    'default': '',
                    'description': '',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'tmr.error_code',
                    'offset': 441,
                    'total_size': '',
                    'type': 'uint16_t',
                    'type_size': 2},
 'tmr.freq': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'tmr.freq',
              'offset': 444,
              'total_size': '',
              'type': 'uint32_t',
              'type_size': 4},
 'tmr.hi_us': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': '',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'tmr.hi_us',
               'offset': 448,
               'total_size': '',
               'type': 'uint32_t',
               'type_size': 4},
 'tmr.lo_us': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': '',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'tmr.lo_us',
               'offset': 452,
               'total_size': '',
               'type': 'uint32_t',
               'type_size': 4},
 'tmr.mode': {'access': 1,
              'array_size': '',
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': '',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'tmr.mode',
              'offset': 440,
              'total_size': '',
              'type': 'uint8_t',
              'type_size': 1},
 'uart.baud': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Baudrate',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'uart.baud',
               'offset': 369,
               'total_size': '',
               'type': 'uint32_t',
               'type_size': 4},
 'uart.ctrl': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'UART control register',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'uart.ctrl',
               'offset': 377,
               'total_size': '',
               'type': 'uart_ctrl_t',
               'type_size': 1},
 'uart.ctrl.data_bits': {'access': 1,
                         'array_size': '',
                         'bit_offset': 4,
                         'bits': 1,
                         'default': '',
                         'description': 'Number of data bits',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.ctrl.data_bits',
                         'offset': 377,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'uart.ctrl.parity': {'access': 1,
                      'array_size': '',
                      'bit_offset': 1,
                      'bits': 2,
                      'default': '',
                      'description': 'Parity',
                      'flag': '',
                      'invalid': '',
                      'max': '',
                      'min': '',
                      'name': 'uart.ctrl.parity',
                      'offset': 377,
                      'total_size': '',
                      'type': '',
                      'type_size': 1},
 'uart.ctrl.rts': {'access': 1,
                   'array_size': '',
                   'bit_offset': 3,
                   'bits': 1,
                   'default': '',
                   'description': 'RTS pin state',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.ctrl.rts',
                   'offset': 377,
                   'total_size': '',
                   'type': '',
                   'type_size': 1},
 'uart.ctrl.stop_bits': {'access': 1,
                         'array_size': '',
                         'bit_offset': 0,
                         'bits': 1,
                         'default': '',
                         'description': 'Number of stop bits',
                         'flag': '',
                         'invalid': '',
                         'max': '',
                         'min': '',
                         'name': 'uart.ctrl.stop_bits',
                         'offset': 377,
                         'total_size': '',
                         'type': '',
                         'type_size': 1},
 'uart.mode': {'access': 1,
               'array_size': '',
               'bit_offset': '',
               'bits': '',
               'default': '',
               'description': 'Test mode',
               'flag': '',
               'invalid': '',
               'max': '',
               'min': '',
               'name': 'uart.mode',
               'offset': 368,
               'total_size': '',
               'type': 'uint8_t',
               'type_size': 1},
 'uart.res': {'access': 0,
              'array_size': 5,
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Reserved bytes',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'uart.res',
              'offset': 379,
              'total_size': 5,
              'type': 'uint8_t',
              'type_size': 1},
 'uart.rx_count': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Number of received bytes',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.rx_count',
                   'offset': 373,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'uart.status': {'access': 0,
                 'array_size': '',
                 'bit_offset': '',
                 'bits': '',
                 'default': '',
                 'description': 'UART status register',
                 'flag': '',
                 'invalid': '',
                 'max': '',
                 'min': '',
                 'name': 'uart.status',
                 'offset': 378,
                 'total_size': '',
                 'type': 'uart_status_t',
                 'type_size': 1},
 'uart.status.cts': {'access': 0,
                     'array_size': '',
                     'bit_offset': 0,
                     'bits': 1,
                     'default': '',
                     'description': 'CTS pin state',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.status.cts',
                     'offset': 378,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.status.fe': {'access': 0,
                    'array_size': '',
                    'bit_offset': 2,
                    'bits': 1,
                    'default': '',
                    'description': 'Framing error',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.fe',
                    'offset': 378,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.status.nf': {'access': 0,
                    'array_size': '',
                    'bit_offset': 3,
                    'bits': 1,
                    'default': '',
                    'description': 'Noise detected flag',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.nf',
                    'offset': 378,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.status.ore': {'access': 0,
                     'array_size': '',
                     'bit_offset': 4,
                     'bits': 1,
                     'default': '',
                     'description': 'Overrun error',
                     'flag': '',
                     'invalid': '',
                     'max': '',
                     'min': '',
                     'name': 'uart.status.ore',
                     'offset': 378,
                     'total_size': '',
                     'type': '',
                     'type_size': 1},
 'uart.status.pe': {'access': 0,
                    'array_size': '',
                    'bit_offset': 1,
                    'bits': 1,
                    'default': '',
                    'description': 'Parity error',
                    'flag': '',
                    'invalid': '',
                    'max': '',
                    'min': '',
                    'name': 'uart.status.pe',
                    'offset': 378,
                    'total_size': '',
                    'type': '',
                    'type_size': 1},
 'uart.tx_count': {'access': 0,
                   'array_size': '',
                   'bit_offset': '',
                   'bits': '',
                   'default': '',
                   'description': 'Number of transmitted bytes',
                   'flag': '',
                   'invalid': '',
                   'max': '',
                   'min': '',
                   'name': 'uart.tx_count',
                   'offset': 375,
                   'total_size': '',
                   'type': 'uint16_t',
                   'type_size': 2},
 'user_reg': {'access': 3,
              'array_size': 256,
              'bit_offset': '',
              'bits': '',
              'default': '',
              'description': 'Writable registers for user testing',
              'flag': '',
              'invalid': '',
              'max': '',
              'min': '',
              'name': 'user_reg',
              'offset': 0,
              'total_size': 256,
              'type': 'uint8_t',
              'type_size': 1}}